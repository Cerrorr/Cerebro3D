---
description:
globs:
alwaysApply: false
---
# 项目结构组织规范

## Critical Rules

- **公共组件统一管理**：所有可复用的公共组件必须放在 `components/` 目录下
- **业务代码分类存放**：业务层代码按功能模块分类放在 `pages/` 目录下
- **Hook功能分离**：`hooks/` 目录下必须区分业务Hook和Three.js相关Hook
- **组件职责明确**：`components/` 只存放通用组件，`pages/` 只存放业务页面
- **Hook分类清晰**：业务Hook放在 `hooks/business/`，Three.js Hook放在 `hooks/three/`
- **类型定义对应**：每个模块的类型定义文件应与功能模块对应
- **路由配置集中**：所有路由相关配置统一放在 `routes/` 目录
- **工具函数分类**：通用工具放在 `utils/`，业务工具放在对应业务模块内

## 标准目录结构

```
src/
├── components/           # 📁 公共组件
│   ├── ui/              # 基础UI组件
│   ├── layout/          # 布局组件
│   ├── editor/          # 编辑器公共组件
│   └── common/          # 通用业务组件
├── pages/               # 📁 业务页面
│   ├── editor/          # 编辑器相关页面
│   ├── project/         # 项目管理相关页面
│   ├── settings/        # 设置相关页面
│   └── auth/            # 认证相关页面
├── hooks/               # 📁 自定义Hook
│   ├── business/        # 业务逻辑Hook
│   └── three/           # Three.js相关Hook
├── routes/              # 📁 路由配置
├── store/               # 📁 状态管理
├── types/               # 📁 类型定义
├── utils/               # 📁 工具函数
└── services/            # 📁 服务层
```

## Examples

<example>
  正确的组件分类：
  
  // 公共组件 - components/ui/button.tsx
  export const Button = ({ children, onClick }) => { ... }
  
  // 布局组件 - components/layout/appLayout.tsx
  export const AppLayout = ({ children }) => { ... }
  
  // 业务页面 - pages/editor/editorPage.tsx
  export const EditorPage = () => { ... }
  
  // 业务Hook - hooks/business/useProjectManager.ts
  export const useProjectManager = () => { ... }
  
  // Three.js Hook - hooks/three/useThreeScene.ts
  export const useThreeScene = () => { ... }
  
  // 项目管理页面 - pages/project/projectListPage.tsx
  export const ProjectListPage = () => { ... }
</example>

<example type="invalid">
  错误的组件分类：
  
  // ❌ 业务页面放在components中
  components/editorPage.tsx
  
  // ❌ 公共组件放在pages中
  pages/button.tsx
  
  // ❌ Hook没有分类
  hooks/useProjectManager.ts  // 应该在 hooks/business/
  hooks/useThreeScene.ts      // 应该在 hooks/three/
  
  // ❌ 业务逻辑混在公共组件中
  components/projectSpecificComponent.tsx
  
  // ❌ 路由配置分散在各个文件中
  pages/editor/routes.tsx     // 应该在 routes/
</example>
